[
  ~[tlist_sql;
    WITH studenttestscore_json AS (
      SELECT
        studenttest.id AS studenttest_id,
        chr(123) ||
        listagg('"' ||
                CASE
                WHEN instr(testscore.name, '...') > 0
                  THEN to_char(testscore.description)
                ELSE testscore.name
                END
                || '"' || chr(58) || chr(123) || '"num_score"' || chr(58) ||
                studenttestscore.numscore ||
                CASE
                WHEN alphascore IS NOT NULL
                  THEN ', "alpha_score"' || chr(58) || ' '|| studenttestscore.alphascore || '"'
                END ||
                CASE
                WHEN percentscore <> 0
                  THEN ', "percent_score" ' || chr(58) || ' ' || studenttestscore.percentscore
                END ||
                chr(125)
        , ',')
        WITHIN GROUP (
          ORDER BY testscore.sortorder
        )
        || chr(125)    AS json
      FROM studenttest
        JOIN studenttestscore ON studenttest.id = studenttestscore.studenttestid
        JOIN testscore ON studenttestscore.testscoreid = testscore.id
      WHERE studenttest.studentid = (
        SELECT id
        FROM students
        WHERE dcid = ~(gpv.students_dcid)
      )
      GROUP BY
        studenttest.id)
  SELECT
    CASE
    WHEN to_char(test.name) IS NULL
      THEN 'null'
    ELSE '"' || to_char(test.name) || '"' END                           AS test_name,
    CASE
    WHEN to_char(studenttest.test_date, 'MM-DD-YYYY') IS NULL
      THEN 'null'
    ELSE '"' || to_char(studenttest.test_date, 'MM-DD-YYYY') || '"' END AS test_date,
    CASE
    WHEN to_char(studenttest.grade_level) IS NULL
      THEN 'null'
    WHEN studenttest.grade_level = 0
      THEN '"K"'
    WHEN studenttest.grade_level = -1
      THEN '"PK4"'
    WHEN studenttest.grade_level = -2
      THEN '"PK3"'
    ELSE to_char(studenttest.grade_level) END                           AS grade_level,
    studenttestscore_json.json                                          AS test_scores,
    CASE
    WHEN to_char(terms.yearid) IS NULL
      THEN 'null'
    ELSE to_char(terms.yearid) END                                      AS year_id,
    CASE
    WHEN row_number()
         OVER (
           ORDER BY NULL) = count(*)
         OVER ()
      THEN ''
    ELSE ',' END                                                        AS comma
  FROM studenttestscore_json
    JOIN studenttest ON studenttestscore_json.studenttest_id = studenttest.id
    JOIN test ON studenttest.testid = test.id
    JOIN terms ON studenttest.termid = terms.id AND
                  studenttest.schoolid = terms.schoolid]
        {
          "test_name": ~(test_name),
          "test_date": ~(test_date),
          "grade_level": ~(grade_level),
          "test_scores": ~(test_scores),
          "year_id": ~(year_id)
        }~(comma)
      [/tlist_sql]
  ]
