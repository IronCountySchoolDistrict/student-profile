[
  ~[tlist_sql;
    WITH att_type_totals_per_section AS (
      SELECT
        cc.sectionid                        AS sectionid,
        attendance_code.att_category        AS att_category,
        count(attendance_code.att_category) AS att_count
      FROM
        attendance
        INNER JOIN students ON attendance.studentid = students.id
        INNER JOIN
        (
          SELECT
            id,
            CASE attendance_code.att_code
            WHEN 'U'
              THEN 'Unexcused'
            WHEN 'E'
              THEN 'Excused'
            WHEN 'S'
              THEN 'Excused'
            WHEN 'L'
              THEN 'Tardy'
            WHEN 'T'
              THEN 'Tardy'
            WHEN 'X'
              THEN 'Tardy' END AS att_category
          FROM attendance_code
          WHERE yearid = ~(gpv.year_id) AND schoolid = (
            SELECT schoolid
            FROM students
            WHERE dcid = ~(gpv.students_dcid))
        ) attendance_code
          ON attendance.attendance_codeid = attendance_code.id
        INNER JOIN cc ON attendance.ccid = cc.id
      WHERE
        students.id = (
          SELECT id
          FROM students
          WHERE dcid = ~(gpv.students_dcid)) AND
        attendance.yearid = ~(gpv.year_id) AND
        attendance_code.att_category IS NOT NULL
      GROUP BY cc.sectionid, attendance_code.att_category
  ), att_summary_per_section AS (
      SELECT
        sectionid   AS section_id,
        chr(123) ||
        listagg(
            '"' || lower(att_type_totals_per_section.att_category) || '"' || chr(58) ||
            att_type_totals_per_section.att_count
            , ',')
        WITHIN GROUP (
          ORDER BY 1)
        || chr(125) AS exempt
      FROM att_type_totals_per_section
      GROUP BY sectionid
  ), section_assignment_summary AS (
      SELECT
        cc.sectionid AS section_id,
        chr(123) ||
        listagg(
            '"' || pgfinalgrades.finalgradename || '"' || chr(58) ||
            chr(123) ||
            '"id"' || chr(58) || ' ' || pgfinalgrades.id || ',' ||
            '"percent"' || chr(58) || pgfinalgrades.percent || ',' ||
            '"grade"' || chr(58) || ' "' || pgfinalgrades.grade || '"' ||
            chr(125)
            , ',')
        WITHIN GROUP (
          ORDER BY 1)
        || chr(125)  AS grade
      FROM
        cc
        JOIN students ON cc.studentid = students.id
        JOIN pgfinalgrades
          ON students.id = pgfinalgrades.studentid AND pgfinalgrades.sectionid = cc.sectionid
      WHERE
        cc.studentid = (
          SELECT students.id
          FROM students
          WHERE students.dcid = ~(gpv.students_dcid)) AND
        cc.termid LIKE ~(gpv.year_id) || '%'
      GROUP BY cc.sectionid
  ), section_cycle_day_letters AS (
      SELECT
        sections.id                   AS section_id,
        LISTAGG(section_meeting.cycle_day_letter, '-')
        WITHIN GROUP (
          ORDER BY period.sort_order) AS day_letters
      FROM
        sections
        JOIN cc ON sections.id = cc.sectionid
        JOIN section_meeting ON section_meeting.sectionid = sections.id
        JOIN period
          ON section_meeting.period_number = period.period_number
             AND sections.schoolid = period.schoolid
             AND floor(sections.termid / 100) = period.year_id
      WHERE cc.studentid = (
        SELECT id
        FROM students
        WHERE dcid = ~(gpv.students_dcid))
      GROUP BY
        sections.id
  ), section_period_expr AS (
      SELECT
        sections.id                                                                AS section_id,
        period.abbreviation || '(' || section_cycle_day_letters.day_letters || ')' AS period_expr,
        period.sort_order                                                          AS sort_order,
        section_meeting.cycle_day_letter                                           AS cycle_day_letter
      FROM sections
        JOIN cc ON sections.id = cc.sectionid
        JOIN section_cycle_day_letters ON sections.id = section_cycle_day_letters.section_id
        JOIN section_meeting ON section_meeting.sectionid = section_cycle_day_letters.section_id
        JOIN period ON section_meeting.period_number = period.period_number AND
                       sections.schoolid = period.schoolid AND
                       floor(sections.termid / 100) = period.year_id
      WHERE cc.studentid = (
        SELECT id
        FROM students
        WHERE dcid = ~(gpv.students_dcid))
      ORDER BY sort_order, cycle_day_letter
  ), distinct_section_period_expr AS (
      SELECT
        section_id,
        period_expr,
        sort_order,
        min(cycle_day_letter) as cycle_day_letter
      FROM section_period_expr
      GROUP BY section_id, period_expr, sort_order
  )
  SELECT
    cc.dcid,
    cc.id,
    CASE
    WHEN TO_CHAR(courses.course_name) IS NULL
      THEN 'null'
    ELSE '"' || TO_CHAR(courses.course_name) || '"' END                      AS course_name,
    CASE
    WHEN TO_CHAR(distinct_section_period_expr.period_expr) IS NULL
      THEN 'null'
    ELSE '"' || TO_CHAR(distinct_section_period_expr.period_expr) || '"' END AS expression,
    CASE
    WHEN TO_CHAR(terms.abbreviation) IS NULL
      THEN 'null'
    ELSE '"' || TO_CHAR(terms.abbreviation) || '"' END                       AS term,
    CASE
    WHEN TO_CHAR(cc.sectionid) IS NULL
      THEN 'null'
    ELSE TO_CHAR(cc.sectionid) END                                           AS section_id,
    CASE
    WHEN TO_CHAR(cc.studentid) IS NULL
      THEN 'null'
    ELSE TO_CHAR(cc.studentid) END                                           AS student_id,
    nvl(section_assignment_summary.grade, chr(123) || chr(125))              AS grade_summary,
    CASE
    WHEN TO_CHAR(teachers.lastfirst) IS NULL
      THEN 'null'
    ELSE '"' || TO_CHAR(teachers.lastfirst) || '"' END                       AS teacher_lastfirst,
    CASE
    WHEN TO_CHAR(students.grade_level) IS NULL
      THEN 'null'
    ELSE TO_CHAR(students.grade_level) END                                   AS grade_level,
    CASE
    WHEN TO_CHAR(schools.low_grade) IS NULL
      THEN 'null'
    ELSE TO_CHAR(schools.low_grade) END                                      AS school_low_grade,
    nvl(att_summary_per_section.exempt, chr(123) || chr(125))                AS attendance_summary,
    CASE
    WHEN row_number()
         OVER (
           ORDER BY NULL) = count(*)
         OVER ()
      THEN ''
    ELSE ','
    END                                                                      AS comma
  FROM
    cc
    LEFT JOIN att_summary_per_section ON cc.sectionid = att_summary_per_section.section_id
    LEFT JOIN section_assignment_summary ON cc.sectionid = section_assignment_summary.section_id
    LEFT JOIN sections ON cc.sectionid = sections.id
    LEFT JOIN courses ON cc.course_number = courses.course_number
    LEFT JOIN students ON cc.studentid = students.id
    LEFT JOIN teachers ON cc.teacherid = teachers.id
    LEFT JOIN schools ON cc.schoolid = schools.school_number
    LEFT JOIN terms ON terms.id = cc.termid AND
                       terms.schoolid = cc.schoolid
    LEFT JOIN distinct_section_period_expr ON sections.id = distinct_section_period_expr.section_id
  WHERE
    cc.studentid = (
      SELECT students.id
      FROM students
      WHERE students.dcid = ~(gpv.students_dcid)) AND
    (cc.termid LIKE ~(gpv.year_id) || '%' OR cc.termid LIKE '-' || ~(gpv.year_id) || '%')
  order by distinct_section_period_expr.cycle_day_letter, distinct_section_period_expr.sort_order]
      {
        "dcid": ~(dcid),
        "id": ~(id),
        "course_name": ~(course_name),
        "expression": ~(expression),
        "term": ~(term),
        "sectionid": ~(sectionid),
        "studentid": ~(studentid),
        "grades": ~(grades),
        "teacher_name": ~(lastfirst),
        "grade_level": ~(grade_level),
        "low_grade": ~(low_grade),
        "attendance": ~(attendance)
      }~(comma)
  [/tlist_sql]
]
