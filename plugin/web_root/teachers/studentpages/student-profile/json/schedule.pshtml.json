[
  ~[tlist_sql;
    WITH dropped_complete AS (
        SELECT
          id,
          CASE WHEN termid < 0
            THEN 'true'
          ELSE 'false'
          END AS dropped,
          CASE
          WHEN dateleft < sysdate
            THEN 'true'
          ELSE 'false'
          END AS completed
        FROM
          cc
    )

    SELECT
      cc.dcid,
      cc.id,
      CASE
      WHEN TO_CHAR(cc.dateenrolled) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(cc.dateenrolled, 'MM/DD/YYYY') || '"' END,
      CASE
      WHEN TO_CHAR(courses.course_name) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(courses.course_name) || '"' END,
      CASE
      WHEN TO_CHAR(sections.expression) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(sections.expression) || '"' END,
      CASE
      WHEN TO_CHAR(terms.abbreviation) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(terms.abbreviation) || '"' END,
      cc.termid,
      dropped_complete.dropped,
      dropped_complete.completed,
      CASE
      WHEN TO_CHAR(cc.sectionid) IS NULL
        THEN 'null'
      ELSE TO_CHAR(cc.sectionid) END,
      CASE
      WHEN TO_CHAR(cc.studentid) IS NULL
        THEN 'null'
      ELSE TO_CHAR(cc.studentid) END,
      nvl(sectionscoresassignments.grade, chr(123) || chr(125)),
      CASE
      WHEN TO_CHAR(teachers.lastfirst) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(teachers.lastfirst) || '"' END,
      CASE
      WHEN TO_CHAR(students.grade_level) IS NULL
        THEN 'null'
      ELSE TO_CHAR(students.grade_level) END,
      CASE
      WHEN TO_CHAR(schools.low_grade) IS NULL
        THEN 'null'
      ELSE TO_CHAR(schools.low_grade) END,
      CASE
      WHEN TO_CHAR(cc.dateleft) IS NULL
        THEN 'null'
      ELSE '"' || TO_CHAR(cc.dateleft, 'MM/DD/YYYY') || '"' END,
      nvl(sectionscores.exempt, chr(123) || chr(125)),
      CASE
      WHEN row_number()
           OVER (
             ORDER BY NULL) = count(*)
           OVER ()
        THEN ''
      ELSE ','
      END AS comma
    FROM
      cc
      LEFT JOIN dropped_complete ON cc.id = dropped_complete.id
      LEFT JOIN
      (
        SELECT
          sectionid   AS id,
          chr(123) ||
          listagg(
              '"' || lower(section_attendance.att_category) || '"' || chr(58) || section_attendance.att_count
              , ',')
          WITHIN GROUP (
            ORDER BY 1)
          || chr(125) AS exempt
        FROM (
               SELECT
                 cc.sectionid                        AS sectionid,
                 attendance_code.att_category        AS att_category,
                 count(attendance_code.att_category) AS att_count
               FROM
                 attendance
                 INNER JOIN students ON attendance.studentid = students.id
                 INNER JOIN
                 (
                   SELECT
                     id,
                     CASE attendance_code.att_code
                     WHEN 'U'
                       THEN 'Unexcused'
                     WHEN 'E'
                       THEN 'Excused'
                     WHEN 'S'
                       THEN 'Excused'
                     WHEN 'L'
                       THEN 'Tardy'
                     WHEN 'T'
                       THEN 'Tardy'
                     WHEN 'X'
                       THEN 'Tardy' END AS att_category
                   FROM attendance_code
                   WHERE yearid = ~(gpv.yearid) AND schoolid = (
                     SELECT schoolid
                     FROM students
                     WHERE dcid = ~(gpv.students_dcid))
                 ) attendance_code
                   ON attendance.attendance_codeid = attendance_code.id
                 INNER JOIN cc ON attendance.ccid = cc.id
               WHERE
                 students.id = (
                   SELECT id
                   FROM students
                   WHERE dcid = ~(gpv.students_dcid)) AND
                 attendance.yearid = ~(gpv.yearid) AND
                 attendance_code.att_category IS NOT NULL
               GROUP BY cc.sectionid, attendance_code.att_category) section_attendance
        GROUP BY sectionid
      ) sectionscores ON cc.sectionid = sectionscores.id
      LEFT JOIN
      (
        SELECT
          cc.sectionid,
          chr(123) ||
          listagg(
              '"' || pgfinalgrades.finalgradename || '"' || chr(58) || chr(123) ||
              '"percent"' || chr(58) || ' "' || pgfinalgrades.percent || '",' ||
              '"grade"' || chr(58) || ' "' || pgfinalgrades.grade || '"' || chr(125)
              , ',')
          WITHIN GROUP (
            ORDER BY 1)
          || chr(125) AS grade
        FROM
          cc
          JOIN students ON cc.studentid = students.id
          JOIN pgfinalgrades
            ON students.id = pgfinalgrades.studentid AND pgfinalgrades.sectionid = cc.sectionid
        WHERE
          cc.studentid = (
            SELECT students.id
            FROM students
            WHERE students.dcid = ~(gpv.students_dcid)) AND
          cc.termid LIKE ~(gpv.yearid) || '%'
        GROUP BY cc.sectionid
      ) sectionscoresassignments ON cc.sectionid = sectionscoresassignments.sectionid
      LEFT JOIN sections ON cc.sectionid = sections.id
      LEFT JOIN courses ON cc.course_number = courses.course_number
      LEFT JOIN students ON cc.studentid = students.id
      LEFT JOIN teachers ON cc.teacherid = teachers.id
      LEFT JOIN schools ON cc.schoolid = schools.school_number
      LEFT JOIN terms ON terms.id = cc.termid AND terms.schoolid = cc.schoolid
    WHERE
      cc.studentid = (
        SELECT students.id
        FROM students
        WHERE students.dcid = ~(gpv.students_dcid)) AND
      (cc.termid LIKE ~(gpv.yearid) || '%' OR cc.termid LIKE '-' || ~(gpv.yearid) || '%')
    ORDER BY terms.abbreviation, sections.expression]
      {
        "dcid": ~(dcid),
        "id": ~(id),
        "dateenrolled": ~(dateenrolled),
        "course_name": ~(course_name),
        "expression": ~(expression),
        "abbreviation": ~(abbreviation),
        "termid": ~(termid),
        "dropped": ~(dropped),
        "completed": ~(completed),
        "sectionid": ~(sectionid),
        "studentid": ~(studentid),
        "grades": ~(grades),
        "lastfirst": ~(lastfirst),
        "grade_level": ~(grade_level),
        "low_grade": ~(low_grade),
        "dateleft": ~(dateleft),
        "attendance": ~(attendance)
      }~(comma)
  [/tlist_sql]
]
